// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

#ifndef PROTOBUF_Messages_2eproto__INCLUDED
#define PROTOBUF_Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace reqresp {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Messages_2eproto();
void protobuf_AssignDesc_Messages_2eproto();
void protobuf_ShutdownFile_Messages_2eproto();

class request;
class response;
class batch_request;
class batch_response;

// ===================================================================

class request : public ::google::protobuf::Message {
 public:
  request();
  virtual ~request();
  
  request(const request& from);
  
  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const request& default_instance();
  
  void Swap(request* other);
  
  // implements Message ----------------------------------------------
  
  request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const request& from);
  void MergeFrom(const request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // repeated string ids = 2;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 2;
  inline const ::std::string& ids(int index) const;
  inline ::std::string* mutable_ids(int index);
  inline void set_ids(int index, const ::std::string& value);
  inline void set_ids(int index, const char* value);
  inline void set_ids(int index, const char* value, size_t size);
  inline ::std::string* add_ids();
  inline void add_ids(const ::std::string& value);
  inline void add_ids(const char* value);
  inline void add_ids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ids();
  
  // repeated string types = 3;
  inline int types_size() const;
  inline void clear_types();
  static const int kTypesFieldNumber = 3;
  inline const ::std::string& types(int index) const;
  inline ::std::string* mutable_types(int index);
  inline void set_types(int index, const ::std::string& value);
  inline void set_types(int index, const char* value);
  inline void set_types(int index, const char* value, size_t size);
  inline ::std::string* add_types();
  inline void add_types(const ::std::string& value);
  inline void add_types(const char* value);
  inline void add_types(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& types() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_types();
  
  // @@protoc_insertion_point(class_scope:reqresp.request)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> types_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();
  
  void InitAsDefaultInstance();
  static request* default_instance_;
};
// -------------------------------------------------------------------

class response : public ::google::protobuf::Message {
 public:
  response();
  virtual ~response();
  
  response(const response& from);
  
  inline response& operator=(const response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const response& default_instance();
  
  void Swap(response* other);
  
  // implements Message ----------------------------------------------
  
  response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const response& from);
  void MergeFrom(const response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data(int index) const;
  inline ::std::string* mutable_data(int index);
  inline void set_data(int index, const ::std::string& value);
  inline void set_data(int index, const char* value);
  inline void set_data(int index, const char* value, size_t size);
  inline ::std::string* add_data();
  inline void add_data(const ::std::string& value);
  inline void add_data(const char* value);
  inline void add_data(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data();
  
  // @@protoc_insertion_point(class_scope:reqresp.response)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();
  
  void InitAsDefaultInstance();
  static response* default_instance_;
};
// -------------------------------------------------------------------

class batch_request : public ::google::protobuf::Message {
 public:
  batch_request();
  virtual ~batch_request();
  
  batch_request(const batch_request& from);
  
  inline batch_request& operator=(const batch_request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const batch_request& default_instance();
  
  void Swap(batch_request* other);
  
  // implements Message ----------------------------------------------
  
  batch_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const batch_request& from);
  void MergeFrom(const batch_request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .reqresp.request batch = 1;
  inline int batch_size() const;
  inline void clear_batch();
  static const int kBatchFieldNumber = 1;
  inline const ::reqresp::request& batch(int index) const;
  inline ::reqresp::request* mutable_batch(int index);
  inline ::reqresp::request* add_batch();
  inline const ::google::protobuf::RepeatedPtrField< ::reqresp::request >&
      batch() const;
  inline ::google::protobuf::RepeatedPtrField< ::reqresp::request >*
      mutable_batch();
  
  // @@protoc_insertion_point(class_scope:reqresp.batch_request)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::reqresp::request > batch_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();
  
  void InitAsDefaultInstance();
  static batch_request* default_instance_;
};
// -------------------------------------------------------------------

class batch_response : public ::google::protobuf::Message {
 public:
  batch_response();
  virtual ~batch_response();
  
  batch_response(const batch_response& from);
  
  inline batch_response& operator=(const batch_response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const batch_response& default_instance();
  
  void Swap(batch_response* other);
  
  // implements Message ----------------------------------------------
  
  batch_response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const batch_response& from);
  void MergeFrom(const batch_response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .reqresp.response batch = 1;
  inline int batch_size() const;
  inline void clear_batch();
  static const int kBatchFieldNumber = 1;
  inline const ::reqresp::response& batch(int index) const;
  inline ::reqresp::response* mutable_batch(int index);
  inline ::reqresp::response* add_batch();
  inline const ::google::protobuf::RepeatedPtrField< ::reqresp::response >&
      batch() const;
  inline ::google::protobuf::RepeatedPtrField< ::reqresp::response >*
      mutable_batch();
  
  // @@protoc_insertion_point(class_scope:reqresp.batch_response)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::reqresp::response > batch_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();
  
  void InitAsDefaultInstance();
  static batch_response* default_instance_;
};
// ===================================================================


// ===================================================================

// request

// required string name = 1;
inline bool request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void request::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& request::name() const {
  return *name_;
}
inline void request::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void request::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void request::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* request::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* request::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string ids = 2;
inline int request::ids_size() const {
  return ids_.size();
}
inline void request::clear_ids() {
  ids_.Clear();
}
inline const ::std::string& request::ids(int index) const {
  return ids_.Get(index);
}
inline ::std::string* request::mutable_ids(int index) {
  return ids_.Mutable(index);
}
inline void request::set_ids(int index, const ::std::string& value) {
  ids_.Mutable(index)->assign(value);
}
inline void request::set_ids(int index, const char* value) {
  ids_.Mutable(index)->assign(value);
}
inline void request::set_ids(int index, const char* value, size_t size) {
  ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* request::add_ids() {
  return ids_.Add();
}
inline void request::add_ids(const ::std::string& value) {
  ids_.Add()->assign(value);
}
inline void request::add_ids(const char* value) {
  ids_.Add()->assign(value);
}
inline void request::add_ids(const char* value, size_t size) {
  ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
request::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
request::mutable_ids() {
  return &ids_;
}

// repeated string types = 3;
inline int request::types_size() const {
  return types_.size();
}
inline void request::clear_types() {
  types_.Clear();
}
inline const ::std::string& request::types(int index) const {
  return types_.Get(index);
}
inline ::std::string* request::mutable_types(int index) {
  return types_.Mutable(index);
}
inline void request::set_types(int index, const ::std::string& value) {
  types_.Mutable(index)->assign(value);
}
inline void request::set_types(int index, const char* value) {
  types_.Mutable(index)->assign(value);
}
inline void request::set_types(int index, const char* value, size_t size) {
  types_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* request::add_types() {
  return types_.Add();
}
inline void request::add_types(const ::std::string& value) {
  types_.Add()->assign(value);
}
inline void request::add_types(const char* value) {
  types_.Add()->assign(value);
}
inline void request::add_types(const char* value, size_t size) {
  types_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
request::types() const {
  return types_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
request::mutable_types() {
  return &types_;
}

// -------------------------------------------------------------------

// response

// repeated string data = 1;
inline int response::data_size() const {
  return data_.size();
}
inline void response::clear_data() {
  data_.Clear();
}
inline const ::std::string& response::data(int index) const {
  return data_.Get(index);
}
inline ::std::string* response::mutable_data(int index) {
  return data_.Mutable(index);
}
inline void response::set_data(int index, const ::std::string& value) {
  data_.Mutable(index)->assign(value);
}
inline void response::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
}
inline void response::set_data(int index, const char* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* response::add_data() {
  return data_.Add();
}
inline void response::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
}
inline void response::add_data(const char* value) {
  data_.Add()->assign(value);
}
inline void response::add_data(const char* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
response::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
response::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// batch_request

// repeated .reqresp.request batch = 1;
inline int batch_request::batch_size() const {
  return batch_.size();
}
inline void batch_request::clear_batch() {
  batch_.Clear();
}
inline const ::reqresp::request& batch_request::batch(int index) const {
  return batch_.Get(index);
}
inline ::reqresp::request* batch_request::mutable_batch(int index) {
  return batch_.Mutable(index);
}
inline ::reqresp::request* batch_request::add_batch() {
  return batch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::reqresp::request >&
batch_request::batch() const {
  return batch_;
}
inline ::google::protobuf::RepeatedPtrField< ::reqresp::request >*
batch_request::mutable_batch() {
  return &batch_;
}

// -------------------------------------------------------------------

// batch_response

// repeated .reqresp.response batch = 1;
inline int batch_response::batch_size() const {
  return batch_.size();
}
inline void batch_response::clear_batch() {
  batch_.Clear();
}
inline const ::reqresp::response& batch_response::batch(int index) const {
  return batch_.Get(index);
}
inline ::reqresp::response* batch_response::mutable_batch(int index) {
  return batch_.Mutable(index);
}
inline ::reqresp::response* batch_response::add_batch() {
  return batch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::reqresp::response >&
batch_response::batch() const {
  return batch_;
}
inline ::google::protobuf::RepeatedPtrField< ::reqresp::response >*
batch_response::mutable_batch() {
  return &batch_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace reqresp

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Messages_2eproto__INCLUDED
