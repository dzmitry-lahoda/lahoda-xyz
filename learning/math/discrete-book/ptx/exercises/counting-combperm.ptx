<?xml version="1.0" encoding="UTF-8"?>
<exercises xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="exercises_counting-combperm" permid="jkK">

  <exercise permid="TyW">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("C(10,3)");
            $ans2 = Compute("2^10");
            $ans3 = Compute("P(10,5)");
          </pg-code>
        </setup>
        <statement>
          <p permid="uPi">
            A pizza parlor offers 10 toppings.

            <ol permid="gxi">
              <li permid="xvt">
                <p permid="yfn">
                  How many 3-topping pizzas could they put on their menu?
                  Assume double toppings are not allowed.
                </p>

                <p permid="emw">
                  <var name="$ans1" width="5"/>
                </p>
              </li>

              <li permid="dCC">
                <p permid="KtF">
                  How many total pizzas are possible,
                  with between zero and ten toppings
                  (but not double toppings)
                  allowed?
                </p>

                <p permid="qAO">
                  <var name="$ans2" width="5"/>
                </p>
              </li>

              <li permid="JJL">
                <p permid="WHX">
                  The pizza parlor will list the 10 toppings in two equal-sized columns on their menu.
                  How many ways can they arrange the toppings in the left column?
                </p>

                <p permid="CPg">
                  <var name="$ans3" width="5"/>
                </p>
              </li>
            </ol>
          </p>
        </statement>
        <solution permid="Bvs">
          <p permid="vUB">
            <ol permid="bNp">
              <li permid="pQU">
                <m>{10 \choose 3} = 120</m> pizzas.
                We must choose
                (in no particular order)
                3 out of the 10 toppings.
              </li>

              <li permid="VYd">
                <m>2^{10} = 1024</m> pizzas.
                Say yes or no to each topping.
              </li>

              <li permid="Cfm">
                <m>P(10,5) = 30240</m> ways.
                Assign each of the 5 spots in the left column to a unique pizza topping.
              </li>
            </ol>
          </p>
        </solution>
    </webwork>
  </exercise>

  <exercise permid="zGf">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans = Compute("P(40,3)");
          </pg-code>
        </setup>
        <statement>
          <p permid="aWr">
            A combination lock consists of a dial with 40 numbers on it.
            To open the lock,
            you turn the dial to the right until you reach a first number,
            then to the left until you get to second number,
            then to the right again to the third number.
            The numbers must be distinct.
            How many different combinations are possible?
          </p>

          <p permid="HdA">
            <var name="$ans" width="5"/>
          </p>
        </statement>
        <solution permid="hCB">
          <p permid="cbK">
            Despite its name, we are not looking for a combination here.
            The order in which the three numbers appears matters.
            There are <m>P(40,3) = 40\cdot 39 \cdot 38</m> different possibilities for the <q>combination</q>.
            This is assuming you cannot repeat any of the numbers
            (if you could, the answer would be <m>40^3</m>).
          </p>
        </solution>
    </webwork>
  </exercise>

  <exercise permid="fNo">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("7^5");
            $ans2 = Compute("P(7,5)");
            $ans3 = Compute("C(7,5)");
          </pg-code>
        </setup>
        <statement>
          <p permid="nkJ">
            Using the digits 2 through 8, find the number of different 5-digit numbers such that:

            <ol permid="MEr">
              <li permid="imv">
                <p permid="iWp">
                  Digits can be used more than once.
                </p>

                <p permid="Pdy">
                  <var name="$ans1" width="5"/>
                </p>
              </li>

              <li permid="OtE">
                <p permid="vkH">
                  Digits cannot be repeated, but can come in any order.
                </p>

                <p permid="brQ">
                  <var name="$ans2" width="5"/>
                </p>
              </li>

              <li permid="uAN">
                <p permid="HyZ">
                  Digits cannot be repeated and must be written in increasing order.
                </p>

                <p permid="nGi">
                  <var name="$ans3" width="5"/>
                </p>
              </li>

              <li permid="aHW">
                <p permid="TNr">
                  Which of the above counting questions is a combination and which is a permutation?
                  Explain why this makes sense.
                </p>
              </li>
            </ol>
          </p>
        </statement>
        <solution permid="NJK">
          <p permid="IiT">
            <ol permid="HUy">
              <li permid="GPf">
                <p permid="zUA">
                  This is just the multiplicative principle.
                  There are 7 digits which we can select for each of the 5 positions,
                  so we have
                  <m>7^5 = 16807</m>
                  such numbers.
                </p>
              </li>

              <li permid="mWo">
                <p permid="gbJ">
                  Now we have 7 choices for the first number, 6 for the second, etc.
                  So there are
                  <m>7 \cdot 6 \cdot 5 \cdot 4 \cdot 3 = P(7,5) = 2520</m>
                  such numbers.
                </p>
              </li>

              <li permid="Tdx">
                <p permid="MiS">
                  To build such a number we simply must select 5 different digits.
                  After doing so,
                  there will only be one way to arrange them into a 5-digit number.
                  Thus there are
                  <m>{7 \choose 5} = 21</m>
                  such numbers.
                </p>
              </li>

              <li permid="zkG">
                <p permid="sqb">
                  The permutation is in part (b),
                  while the combination is in part (c).
                  At first this seems backwards,
                  since usually we use combinations for when order does not matter.
                  Here it looks like in part (c) that order does matter.
                  The better way to
                  distinguish between combinations and permutations is to ask whether we are counting different arrangements as different outcomes.
                  In part (c),
                  there is only one arrangement of any set of 5 digits,
                  while in part (b) each set of 5 digits gives
                  <m>5!</m>
                  different outcomes.
                </p>
              </li>
            </ol>
          </p>
        </solution>
    </webwork>
  </exercise>

  <exercise permid="LUx">
    <!-- <webwork>
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("P(17,10)");
            $ans2 = Compute("C(17,10)");
          </pg-code>
        </setup> -->
        <statement>
          <p permid="TrS">
            In an attempt to clean up your room,
            you have purchased a new floating shelf to put some of your 17 books you have stacked in a corner.
            These books are all by different authors.
            The new book shelf is large enough to hold 10 of the books.
            <ol permid="sLA">
              <li permid="frP">
                <p permid="Yxk">
                  How many ways can you select and arrange 10 of the 17 books on the shelf?
                  Notice that here we will allow the books to end up in any order.
                  Explain.
                </p>
<!-- 
                <p>
                  <var name="$ans1" width="5"/>
                </p> -->
              </li>

              <li permid="LyY">
                <p permid="EEt">
                  How many ways can you arrange 10 of the 17 books on the shelf if you insist they must be arranged alphabetically by author?
                  Explain.
                </p>
<!-- 
                <p>
                  <var name="$ans2" width="5"/>
                </p> -->
              </li>
            </ol>
          </p>
        </statement>
        <hint permid="tQT">
          <p permid="qfp">
          Which question should have the larger answer?  One of these is a combination, the other is a permutation.  
          </p>
        </hint>
    <!-- </webwork> -->
  </exercise>


  <exercise permid="sbG">

    <introduction oldPERMID="uis" permid="nrN">
      <p permid="OHZ">
        Suppose you wanted to draw a quadrilateral using the dots below as vertices
        (corners).
        The dots are spaced one unit apart horizontally and two units apart vertically.
      </p>

      <sidebyside width="54%" permid="bdv">

        <image xml:id="quad-counting" permid="WWs">

          <latex-image>
            \begin{tikzpicture}[scale=.9]
              \foreach \x in {-3,...,3}
              \foreach \y in {-1,1}
              \fill (\x,\y) circle (3pt);
            \end{tikzpicture}
          </latex-image>
        </image>

      </sidebyside>
    </introduction>

    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $quads = Compute("C(7,2)*C(7,2)");
            $squares = Compute("5");
            $rects = Compute("C(7,2)");
            $parals = Compute("91");
            $alltraps = $quads;
            $nonparals = Compute("$quads - $parals");
          </pg-code>
        </setup>
        <statement>
          <p permid="zzb">
            How many quadrilaterals are possible?
          </p>

          <p permid="fGk">
            <var name="$quads" width="10"/>
          </p>

          <p permid="LNt">
            How many are squares?
          </p>

          <p permid="rUC">
            <var name="$squares" width="10"/>
          </p>

          <p permid="YbL">
            How many are rectangles?
          </p>

          <p permid="EiU">
            <var name="$rects" width="10"/>
          </p>

          <p permid="kqd">
            How many are parallelograms?
          </p>

          <p permid="Qxm">
            <var name="$parals" width="10"/>
          </p>

          <p permid="wEv">
            How many are trapezoids? 
            (Here, as in calculus,
            a trapezoid is defined as a quadrilateral with <em>at least</em>
            one pair of parallel sides.
            In particular, parallelograms are trapezoids.)
          </p>

          <p permid="cLE">
            <var name="$alltraps" width="10"/>
          </p>

          <p permid="ISN">
            How many are trapezoids that are not parallelograms?
          </p>

          <p permid="oZW">
            <var name="$nonparals" width="10"/>
          </p>
        </statement>
        <solution permid="ZYc">
          <p permid="oqc">
            You can make <m>{7\choose 2}{7\choose 2} = 441</m> quadrilaterals.
          </p>

          <p permid="Uxl">
            There are 5 squares.
          </p>

          <p permid="AEu">
            There are <m>{7 \choose 2}</m> rectangles.
          </p>

          <p permid="gLD">
            There are
            <m>{7 \choose 2} + ({7 \choose 2}-1) + ({7 \choose 2} - 3) + ({7 \choose 2} - 6) + ({7 \choose 2} - 10) + ({7 \choose 2} - 15) = 91</m>
            parallelograms.
          </p>

          <p permid="MSM">
            All of the quadrilaterals are trapezoids.
            To count the non-parallelogram trapezoids,
            compute <m>{7\choose 2}{7\choose 2} - \left[ {7 \choose 2} + ({7 \choose 2}-1) + ({7 \choose 2} - 3) + ({7 \choose 2} - 6) + ({7 \choose 2} - 10) + ({7 \choose 2} - 15) \right]</m>.
          </p>
        </solution>
        
    </webwork>
  </exercise>
<!-- The following is now also in combinatorial proof exercises -->
  <exercise permid="YiP">
    <statement>
      <p permid="Vhf">
        How many triangles are there with vertices from the points shown below?
        Note, we are not allowing degenerate triangles - ones with all three vertices on the same line,
        but we do allow non-right triangles.
        Explain why your answer is correct.
      </p>

      <sidebyside width="50%" permid="HkE">

        <image xml:id="triangle-dots" permid="DdB">

          <latex-image>
            \begin{tikzpicture}[scale=0.7]
              \foreach \i in {0,...,6} {
                \fill (\i,0) circle (2pt);
              }
              \foreach \i in {1,...,4} {
                \fill (0,\i) circle (2pt);
              }
            \end{tikzpicture}
          </latex-image>
        </image>

      </sidebyside>
    </statement>
    <hint permid="mmu">
      <p permid="Wmy">
        If you pick any three points, you can get a triangle, unless those three points are all on the <m>x</m>-axis or on the <m>y</m>-axis.  There are other ways to start this as well, and any correct method should give the same answer.
      </p>
    </hint>
    <solution permid="Gfl">
      <p permid="sZV">
        120.
      </p>
    </solution>
  </exercise>

  <exercise permid="EpY">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans = Compute("15!");
          </pg-code>
        </setup>
        <statement>
          <p permid="Boo">
            An <em>anagram</em> of a word is just a rearrangement of its letters.
            How many different anagrams of <q>uncopyrightable</q>
            are there? (This happens to be the longest common English word without any repeated letters.)
          </p>

          <p permid="hvx">
            <var name="$ans" width="5"/>
          </p>
        </statement>
        <solution permid="yAM">
          <p permid="Zhe">
            Since there are 15 different letters,
            we have 15 choices for the first letter, 14 for the next,
            and so on.
            Thus there are <m>15!</m> anagrams.
          </p>
        </solution>
    </webwork>
  </exercise>

  <exercise permid="kxh">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans = Compute("C(7,2)");
          </pg-code>
        </setup>
        <statement>
          <p permid="NCG">
            How many anagrams are there of the word <q>assesses</q>
            that start with the letter <q>a</q>?
          </p>

          <p permid="tJP">
            <var name="$ans" width="5"/>
          </p>
        </statement>
        <hint permid="KPe">
          <p permid="CtH">
            We just need a string of 7 letters: 4 of one type, 3 of the other.
          </p>
        </hint>
        <solution permid="eHV">
          <p permid="Fon">
            There are <m>{7 \choose 2} = 21</m> anagrams starting with <q>a</q>.
          </p>
        </solution>
        
    </webwork>
  </exercise>

  <exercise permid="QEq">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans = Compute("C(7,3)*4!");
          </pg-code>
        </setup>
        <statement>
          <p permid="ZQY">
            How many anagrams are there of <q>anagram</q>?
          </p>

          <p permid="FYh">
            <var name="$ans" width="5"/>
          </p>
        </statement>
        <solution permid="qWn">
          <p permid="lvw">
            First, decide where to put the <q>a</q>s.
            There are 7 positions,
            and we must choose 3 of them to fill with an <q>a</q>.
            This can be done in <m>{7 \choose 3}</m> ways.
            The remaining 4 spots all get a different letter,
            so there are <m>4!</m> ways to finish off the anagram.
            This gives a total of <m>{7 \choose 3}\cdot 4!</m> anagrams.
            Strangely enough, this is 840,
            which is also equal to <m>P(7,4)</m>.
            To get the answer that way,
            start by picking one of the 7 <em>positions</em>
            to be filled by the <q>n</q>,
            one of the remaining 6 positions to be filled by the <q>g</q>,
            one of the remaining 5 positions to be filled by the <q>r</q>,
            one of the remaining 4 positions to be filled by the <q>m</q>
            and then put <q>a</q>s in the remaining 3 positions.
          </p>
        </solution>
    </webwork>
  </exercise>

  <!-- <exercise>
    <webwork>
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("5!");
            $ans2 = Compute("C(11,5)*C(6,2)*C(4,2)*2*1");
            $ans3 = Compute("120 + 120 + 60 + 20 + 5");
          </pg-code>
        </setup>
        <statement>
          <p>
            An <em>anagram</em> of a word is a rearrangement of its letters
            (each of the letters must be used exactly once).
            We do not need the anagram to form an English word.

            <ol>
              <li>
                <p>
                  How many anagrams are there of the word <q>magic</q>?
                  Explain.
                </p>

                <p>
                  <var name="$ans1" width="5"/>
                </p>
              </li>

              <li>
                <p>
                  How many anagrams are there of the word <q>abracadabra</q>?
                  Explain.
                  Note that you need to figure out how to deal with the repeated letters (starting with the first
                  <q>a</q> and then the second <q>a</q>
                  gives the same word as starting with the second <q>a</q>
                  and then the first <q>a</q>.
                </p>

                <p>
                  <var name="$ans2" width="10"/>
                </p>
              </li>

              <li>
                <p>
                  A <em>sub-anagram</em> is just like an anagram except now you don't need to use all of the letters
                  (but you could).
                  So one sub-anagram of <q>magic</q> is <q>mac.</q>
                  How many sub-anagrams are there of the word <q>magic</q>?
                  Explain.
                  Hint: you might want to break this into cases.
                </p>

                <p>
                  <var name="$ans3" width="10"/>
                </p>
              </li>
            </ol>
          </p>
        </statement>
        <solution>
          <p>
            <ol>
              <li>
                <p>
                  There are <m>120 = 5!</m> anagrams.
                  We can pick any of the 5 distinct letters to put first,
                  then any of the remaining 4, and so on.
                  We could also have written this <m>P(5,5)</m>.
                </p>
              </li>

              <li>
                <p>
                  We need to place 5 a's, 2 b's, 2 r's, and one each of c and d.
                  So first select 5 of the eleven slots for the a's, which can be done in <m>{11 \choose 5}</m> ways.
                  Then select 2 of the remaining 6 slots for b's, done in <m>{6 \choose 2}</m> ways.
                  Next pick 2 of the remaining 4 slots of r's, in <m>{4 \choose 2}</m> ways,
                  and finally pick one of the two available spots for the c leaving the last for the d.
                  Thus all together the number of anagrams is:
                  <me>
                    {11\choose 5}{6 \choose 2}{4 \choose 2}2\cdot 1 = 83160
                  </me>.
                  (Note, if you pick a different letter to start with,
                  you get a different looking answer,
                  but the final product should be the same.)
                </p>

                <p>
                  Another approach: Think of all of the letters as different
                  (so there are 5 a's, but maybe written in 5 different fonts,
                  for example.)
                  In this case, there would be <m>11!</m> anagrams.
                  Now to correct for the repeated letters,
                  group all the anagrams that just have different arrangements of the a's, b's and r's into groups.
                  Each group would have <m>5!\cdot 2! \cdot 2!</m> different anagrams
                  (since there are <m>5!</m> ways to arrange the a's, <m>2!</m> ways to arrange the b's and <m>2!</m> ways to arrange the r's).
                  We just need to count groups, so the total is
                  <me>
                    \frac{11!}{5!2! 2!} = 83160
                  </me>.
                </p>
              </li>

              <li>
                <p>
                  We already know there are 120 5-letter sub-anagrams.
                  To find the 4-letter sub-anagrams,
                  we need to pick one of 5 letters first, then one of remaining,
                  then one of 3 after that and one of the remaining 2.
                  Thus there are <m>5\cdot 4 \cdot 3 \cdot 2 = 120</m> of these as well
                  (we could think of these as exactly the 120 full anagrams with the last letter missing).
                  There will be <m>5 \cdot 4 \cdot 3 = 60</m> 3-letter sub-anagrams,
                  <m>5\cdot 4 = 20</m> 2-letter sub-anagrams,
                  and <m>5</m> 1-letter sub-anagrams.
                  All together, this brings the number of sub-anagrams to
                  <me>
                    120 + 120 + 60 + 20 + 5 = 325
                  </me>.
                </p>
              </li>
            </ol>
          </p>
        </solution>
    </webwork>
  </exercise> -->

  <exercise permid="wLz">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("C(20,4)*C(16,4)*C(12,4)*C(8,4)*C(4,4)");
            $ans2 = Compute("5!*C(15,3)*C(12,3)*C(9,3)*C(6,3)*C(3,3)");
          </pg-code>
        </setup>
        <statement>
          <p permid="mfq">
            On a business retreat,
            your company of 20 executives go golfing.

            <ol permid="YSJ">
              <li permid="rGh">
                <p permid="kLC">
                  You need to divide up into foursomes (groups of 4 people):
                  a first foursome, a second foursome, and so on.
                  How many ways can you do this?
                </p>

                <p permid="QSL">
                  <var name="$ans1" width="10"/>
                </p>
              </li>

              <li permid="XNq">
                <p permid="wZU">
                  After all your hard work, you realize that in fact,
                  you want each foursome to include one of the five Board members.
                  How many ways can you do this?
                </p>

                <p permid="dhd">
                  <var name="$ans2" width="10"/>
                </p>
              </li>
            </ol>
          </p>
        </statement>
        <solution permid="Xdw">
          <p permid="RCF">
            <ol permid="obH">
              <li permid="DUz">
                <m>{20 \choose 4}{16 \choose 4}{12 \choose 4}{8 \choose 4}{4 \choose 4}</m>
                ways.
              </li>

              <li permid="kbI">
                <m>5!{15 \choose 3}{12 \choose 3}{9 \choose 3}{6 \choose 3}{3 \choose 3}</m>
                ways.
              </li>
            </ol>
          </p>
        </solution>
        
    </webwork>
  </exercise>

  <exercise permid="cSI">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans = Compute("10!/10");
          </pg-code>
        </setup>
        <statement>
          <p permid="Smz">
            How many different seating arrangements are possible for King Arthur and his 9 knights around their round table?
          </p>

          <p permid="ytI">
            <var name="$ans" width="5"/>
          </p>
        </statement>
        <hint permid="jrO">
          <p permid="iAQ">
            There are 10 people seated around the table,
            but it does not matter where King Arthur sits,
            only who sits to his left, two seats to his left, and so on.  So the answer is not <m>10!</m>.
          </p>
        </hint>
        <solution permid="DkF">
          <p permid="xJO">
            <m>9!</m>.
          </p>
        </solution>
    </webwork>
  </exercise>

  <exercise permid="IZR">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("17^10");
            $ans2 = Compute("P(17,10)");
          </pg-code>
        </setup>
        <statement>
          <p permid="eAR">
            Consider sets <m>A</m> and <m>B</m> with <m>|A| = 10</m> and <m>|B| = 17</m>.

            <ol permid="EZS">
              <li permid="QiR">
                <p permid="Jom">
                  How many functions <m>f: A \to B</m> are there?
                </p>

                <p permid="pvv">
                  <var name="$ans1" width="5"/>
                </p>
              </li>

              <li permid="wqa">
                <p permid="VCE">
                  How many functions <m>f: A \to B</m> are injective?
                </p>

                <p permid="BJN">
                  <var name="$ans2" width="5"/>
                </p>
              </li>
            </ol>
          </p>
        </statement>
        <solution permid="PyX">
          <p permid="dQX">
            <ol permid="UiQ">
              <li permid="cxj">
                <p permid="hQW">
                  <m>17^{10}</m> functions.
                  There are 17 choices for the image of each element in the domain.
                </p>
              </li>

              <li permid="IEs">
                <p permid="NYf">
                  <m>P(17, 10)</m> injective functions.
                  There are 17 choices for image of the first element of the domain,
                  then only 16 choices for the second, and so on.
                </p>
              </li>
            </ol>
          </p>
        </solution>
    </webwork>
  </exercise>

  <exercise permid="pha">
    <webwork>
      <!-- Allow C(n,k) and P(n,k): -->
        <pg-macros><macro-file>contextIntegerFunctions.pl</macro-file></pg-macros>
        <setup>
          <pg-code>
            Context("IntegerFunctions");
            $ans1 = Compute("6^4");
            $ans2 = Compute("P(6,4)");
            $ans3 = Compute("C(6,4)");
          </pg-code>
        </setup>
        <statement>
          <p permid="KIa">
            Consider functions <m>f: \{1,2,3,4\} \to \{1,2,3,4,5,6\}</m>.

            <ol permid="lhb">
              <li permid="oLB">
                <p permid="ufo">
                  How many functions are there total?
                </p>

                <p permid="amx">
                  <var name="$ans1" width="5"/>
                </p>
              </li>

              <li permid="USK">
                <p permid="GtG">
                  How many functions are injective?
                </p>

                <p permid="mAP">
                  <var name="$ans2" width="5"/>
                </p>
              </li>

              <li permid="AZT">
                <p permid="SHY">
                  How many of the injective functions are <em>increasing</em>?
                  To be increasing means that if <m>a \lt b</m> then <m>f(a) \lt f(b)</m>,
                  or in other words, the outputs get larger as the inputs get larger.
                </p>

                <p permid="yPh">
                  <var name="$ans3" width="5"/>
                </p>
              </li>
            </ol>
          </p>
        </statement>
        <solution permid="vGg">
          <p permid="JYg">
            <ol permid="ApZ">
              <li permid="hhc">
                <p permid="eWq">
                  <m>6^4 = 1296</m> functions.
                </p>
              </li>

              <li permid="Nol">
                <p permid="Ldz">
                  <m>P(6, 4) = 6 \cdot 5 \cdot 4 \cdot 3 = 360</m> functions.
                </p>
              </li>

              <li permid="tvu">
                <p permid="rkI">
                  <m>{6 \choose 4} = 15</m> functions.
                </p>
              </li>
            </ol>
          </p>
        </solution>
        
    </webwork>
  </exercise>

  <exercise permid="Voj">
    <statement>
      <p permid="qPj">
        We have seen that the formula for <m>P(n,k)</m> is <m>\dfrac{n!}{(n-k)!}</m>.
        Your task here is to explain <em>why</em>
        this is the right formula.

        <ol permid="Rok">
          <li permid="ZCD">
            <p permid="XrR">
              Suppose you have 12 chips, each a different color.
              How many different stacks of 5 chips can you make?
              Explain your answer and why it is the same as using the formula for <m>P(12,5)</m>.
            </p>
          </li>

          <li permid="FJM">
            <p permid="Dza">
              Using the scenario of the 12 chips again,
              what does <m>12!</m> count?
              What does <m>7!</m> count?
              Explain.
            </p>
          </li>

          <li permid="lQV">
            <p permid="jGj">
              Explain why it makes sense to divide <m>12!</m> by <m>7!</m> when computing <m>P(12,5)</m>
              (in terms of the chips).
            </p>
          </li>

          <li permid="RYe">
            <p permid="PNs">
              Does your explanation work for numbers other than 12 and 5?
              Explain the formula <m>P(n,k) = \frac{n!}{(n-k)!}</m> using the variables <m>n</m> and <m>k</m>.
            </p>
          </li>
        </ol>
      </p>
    </statement>
  </exercise>


</exercises>
